#include <Blynk.h>

/*************************************************************
This is the latest and likely final rev of my Smartphone Garage Door Opener sketch
using the Adafruit Feather Huzzah board and the Blynk framework. It's pretty robust 
and yells at you when you leave the garage door open too long. I hope it serves you well.

Tyler Winegarner, 2017

#include <Blynk.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <EEPROM.h> // Include EEPROM library

#define BLYNK_PRINT Serial

char auth[] = "AUTH CODE GOES HERE";
char ssid[] = "WIFI";
char pass[] = "PASSWORD";

const int door1Pin = 2;
const int door2Pin = 3;
int warnPin1;
int warnPin2;
int warnThreshold1 = 2000;
int warnThreshold2 = 2000;
int tick1 = 0;
int tick2 = 0;
WidgetLCD lcd1(V1);
WidgetLCD lcd2(V4);
BlynkTimer timer;

BLYNK_WRITE(V2) {
  warnPin1 = param.asInt();
}

BLYNK_WRITE(V5) {
  warnPin2 = param.asInt();
}

void buttonLedWidgetDoor1()
{
  if (digitalRead(door1Pin) == HIGH) {
    lcd1.print(0, 0, "Door 1 Open  ");
    tick1++;
  }
  else {
    lcd1.print(0, 0, "Door 1 Closed");
    tick1 = 0;
    Blynk.virtualWrite(warnPin1, LOW);
  }
  
  if (tick1 > warnThreshold1) {
    if (warnPin1 == LOW) {
      Blynk.notify("Garage door 1 is open!");
      tick1 -= 500;
    }
  }
  
  Blynk.virtualWrite(V3, tick1);
}

void buttonLedWidgetDoor2()
{
  if (digitalRead(door2Pin) == HIGH) {
    lcd2.print(0, 0, "Door 2 Open  ");
    tick2++;
  }
  else {
    lcd2.print(0, 0, "Door 2 Closed");
    tick2 = 0;
    Blynk.virtualWrite(warnPin2, LOW);
  }
  
  if (tick2 > warnThreshold2) {
    if (warnPin2 == LOW) {
      Blynk.notify("Garage door 2 is open!");
      tick2 -= 500;
    }
  }
  
  Blynk.virtualWrite(V6, tick2);
}

void setupWiFi()
{
  EEPROM.begin(512); // Initialize EEPROM
  WiFi.begin(ssid, pass);
  Serial.print("Connecting to Wi-Fi");
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  
  Serial.println();
  Serial.println("Wi-Fi connected");
  Serial.println(WiFi.localIP());
}

void setupBlynk()
{
  Blynk.config(auth);
  Blynk.connect();
  
  while (!Blynk.connected()) {
    delay(500);
    Serial.print(".");
  }
  
  Serial.println();
  Serial.println("Blynk connected");
}

void setupPins()
{
  pinMode(door1Pin, INPUT);
  pinMode(door2Pin, INPUT);
}

void setup()
{
  Serial.begin(9600);
  
  setupWiFi();
  setupBlynk();
  setupPins();
  
  timer.setInterval(10, buttonLedWidgetDoor1);
  timer.setInterval(10, buttonLedWidgetDoor2);
}

void loop()
{
  if (!Blynk.connected()) {
    if (Blynk.connect()) {
      Serial.println("Blynk reconnected");
    }
    else {
      Serial.println("Blynk reconnect failed");
    }
  }
  
  Blynk.run();
  timer.run();
  
  // Enter low-power sleep state when idle
  if (!Blynk.connected() && tick1 == 0 && tick2 == 0) {
    Serial.println("Entering sleep state");
    WiFi.disconnect(true);
    WiFi.forceSleepBegin();
    delay(100);
    ESP.deepSleep(0);
  }
}
